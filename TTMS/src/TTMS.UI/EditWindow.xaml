<UserControl x:Class="TTMS.UI.EditWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ex="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:local="clr-namespace:TTMS.UI"
    xmlns:vm="clr-namespace:TTMS.UI.ViewModels"
    xmlns:h="clr-namespace:TTMS.UI.Helpers"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    mc:Ignorable="d"
    Height="auto"
    Width="400"
    FocusManager.FocusedElement="{Binding ElementName=txName}">

    <UserControl.Resources>
        <Style x:Key="DataGrid">
            <Style.Resources>
                <Style x:Key="DataField" TargetType="Control">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Height" Value="21"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="8,0,0,8"/>
                    <!--<Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>-->
                </Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource DataField}">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border BorderBrush="LightGray" BorderThickness="1">
                                            <TextBlock Text="{TemplateBinding Text}" Padding="4,2"/>
                                        </Border>
                                   </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource DataField}">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBox">
                                        <Border BorderBrush="LightGray" BorderThickness="1">
                                            <TextBlock Text="{TemplateBinding Text}" Padding="4,2" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="ex:DateTimePicker" BasedOn="{StaticResource DataField}">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ex:DateTimePicker">
                                        <Border BorderBrush="LightGray" BorderThickness="1">
                                            <TextBlock Text="{TemplateBinding Text}" Padding="4,2" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="8,0,0,0"/>
                </Style>
            </Style.Resources>
        </Style>

        <vm:EditViewModel x:Key="EditViewModel"/>
    </UserControl.Resources>

    <StackPanel Style="{StaticResource DataGrid}" DataContext="{Binding}" IsEnabled="{Binding IsEditing}">
        <StackPanel x:Name="MenuBar" Style="{StaticResource MenuBar}" Visibility="{Binding IsEditing, Converter={h:BoolToStringConverter}, ConverterParameter='Visible,Collapsed'}">
            <Button x:Name="btSave" Content="Save" Command="{Binding SaveCommand}"/>
            <Button x:Name="btCancel" Content="Cancel" Command="{Binding CancelCommand}"/>
        </StackPanel>


        <DockPanel Margin="8,0,8,0">
            <Button x:Name="btPicture" Cursor="Hand" ToolTip="Click to change current picture" Command="{Binding LoadPictureCommand}">
                <Button.Template>
                    <ControlTemplate>
                        <StackPanel Width="96" Height="88" Background="LightGray" Margin="8,0,0,4" >
                            <Label Content="Upload Picture" Margin="0"
                                   Visibility="{Binding ElementName=imPicture, Path=Source, Converter={h:NullToStringConverter}, ConverterParameter='Visible,Collapsed'}"
                                   Foreground="{Binding Path=IsEditing, Converter={h:BoolToStringConverter}, ConverterParameter='Gray,LightGray'}"
                                   HorizontalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="9" Height="88"/>

                            <Image x:Name="imPicture" Source="{Binding Path=Picture, UpdateSourceTrigger=PropertyChanged}"
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                   Stretch="UniformToFill" StretchDirection="DownOnly"/>
                        </StackPanel>
                    </ControlTemplate>
                </Button.Template>
            </Button>


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Label x:Name="txId" Content="{Binding Path=Id}"
                        Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                        FontSize="8" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4" />

                <Label Content="_Name"/>
                <TextBox x:Name="txName" Grid.Row="1" Grid.ColumnSpan="3"
                         Text="{Binding Path=Name}"/>

                <Label Content="_Alias" Grid.Column="0" Grid.Row="2"/>
                <TextBox x:Name="txAlias" Width="75" Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left"
                         Text="{Binding Path=Alias}"/>

                <Label Content="Type" Grid.Row="2" Grid.Column="1"/>
                <ComboBox x:Name="cbTravelerType" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch"
                          ItemsSource="{Binding Path=Type, Converter={h:EnumToListConverter}, Mode=OneTime}"
                          SelectedValuePath="Value"
                          DisplayMemberPath="Description"
                          SelectedValue="{Binding Path=Type}"/>

                <Label Content="_Status" Grid.Column="2" Grid.Row="2"/>
                <ComboBox x:Name="cbTravelerStatus" Width="75" Grid.Column="2" Grid.Row="3"
                        ItemsSource="{Binding Path=Status, Converter={h:EnumToListConverter}, Mode=OneTime}"
                        SelectedValuePath="Value"
                        DisplayMemberPath="Description"
                        SelectedValue="{Binding Path=Status}"/>
            </Grid>
        </DockPanel>


        <StackPanel Margin="8,0" Style="{StaticResource DataGrid}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Label Content="_Born In" Grid.Column="0" Grid.Row="0"/>
                <ex:DateTimePicker x:Name="txBirthDate" Grid.Row="1" Grid.Column="0" Value="{Binding BirthDate}"
                                     HorizontalAlignment="Left" TimePickerVisibility="Hidden"
                                    Format="Custom" FormatString="dd/MM/yyyy" TimePickerShowButtonSpinner="False" ShowButtonSpinner="False" CultureInfo="en-GB"/>

                <Label Content="_Timeline" Grid.Row="0" Grid.Column="1"/>
                <TextBox x:Name="txBirthTimeline" Grid.Row="1" Grid.Column="1" Width="50" Text="{Binding Path=BirthTimelineId}"/>

                <Label Content="_Location" Grid.Row="0" Grid.Column="2"/>
                <TextBox x:Name="txBirthPlace" Grid.Row="1" Grid.Column="2" Text="{Binding Path=BirthLocation}"/>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Label Content="Time Machine Model" Grid.Row="0" Grid.Column="1"/>
                <ComboBox x:Name="cbTMModel" HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="1"
                        ItemsSource="{Binding Path=DeviceModel, Converter={h:EnumToListConverter}, Mode=OneTime}"
                        SelectedValuePath="Value"
                        DisplayMemberPath="Description"
                        SelectedValue="{Binding Path=DeviceModel}"/>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Label Content="_Last Report" Grid.Column="0" Grid.Row="0"/>
                <ex:DateTimePicker x:Name="txLastDate" Grid.Row="1" Grid.Column="0" Value="{Binding Path=LastDateTime}"
                                    HorizontalAlignment="Left"
                                    Format="Custom" FormatString="dd/MM/yyyy HH:mm" TimePickerShowButtonSpinner="False" ShowButtonSpinner="False" CultureInfo="en-GB"/>

                <Label Content="_Timeline" Grid.Row="0" Grid.Column="1"/>
                <TextBox x:Name="txLastTimeline" Grid.Row="1" Grid.Column="1" Width="50" Text="{Binding Path=LastTimelineId}"/>

                <Label Content="_Location" Grid.Row="0" Grid.Column="2"/>
                <TextBox x:Name="txLastPlace" Grid.Row="1" Grid.Column="2" Text="{Binding Path=LastLocation}"/>
            </Grid>

            <Label Content="Skills &amp; _Notes" Grid.Row="5"/>
            <TextBox x:Name="txSkills" Grid.Column="1" Grid.Row="5" Text="{Binding Path=Skills}"
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        SpellCheck.IsEnabled="True"
                        Height="64"/>
        </StackPanel>
    </StackPanel>
</UserControl>
